@page "/todo"
@page "/todo/{id:int}"
@inject ITodoItemService TodoItemService

@if (Id == null)
{
    <PageTitle>Add the new Task</PageTitle>
    <h3>Add the new Task</h3>
    <hr />
}
else
{
    <PageTitle>Edit @todo.Name</PageTitle>
    <h3>Edit @todo.Name</h3>
    <hr />
}

<EditForm Model="todo" OnSubmit="HandleSubmit">
    <div class="mt-4">
        <div class="mb-3">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="todo.Name" class="form-control"></InputText>
        </div>
        <div class="mb-3">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="todo.Description" class="form-control"></InputText>
        </div>
        <div class="mb-3">
            <label for="date_time">Date and Time</label>
            <InputDate id="date_time" @bind-Value="todo.DateAndTime" class="form-control"></InputDate>
        </div>
        <div class="mb-3">
            <label for="priority">Priority</label>
            <InputSelect id="priority" @bind-Value="todo.Priority" class="form-select">
                <option value="" selected>Select a priority</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="is_done">Done</label>
            <InputCheckbox id="is_done" @bind-Value="todo.isDone" class="form-check-input"></InputCheckbox>
        </div>
        <br />
        <button type="submit" class="btn btn-primary" style="width:150px">@btnText</button>
        <button type="button" class="btn btn-danger" @onclick="DeleteTodoItem" style="width:150px">Delete</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    TodoItem todo = new TodoItem { };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Add" : "Update";
        await TodoItemService.GetTodoItems();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else
        {
            todo = await TodoItemService.GetSingleTodoItem((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await TodoItemService.CreateTodoItem(todo);
        }
        else
        {
            await TodoItemService.UpdateTodoItem(todo);
        }
    }

    async Task DeleteTodoItem()
    {
        await TodoItemService.DeleteTodoItem(todo.Id);
    }
}
