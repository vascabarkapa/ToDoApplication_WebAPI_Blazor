@page "/todoDelete/{id:int}"
@inject ITodoItemService TodoItemService

<PageTitle>Delete Task - To Do App</PageTitle>
<h3>Are you sure you want to delete the task?</h3>
<hr />

<EditForm Model="todo" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="mt-4">
        <div class="mb-3">
            <label for="name">Name</label>
            <InputText disabled id="name" @bind-Value="todo.Name" class="form-control"></InputText>
            <ValidationMessage For="@(() => todo.Name)" />
        </div>
        <div class="mb-3">
            <label for="description">Description</label>
            <InputText disabled id="description" @bind-Value="todo.Description" class="form-control"></InputText>
            <ValidationMessage For="@(() => todo.Description)" />
        </div>
        <div class="mb-3">
            <label for="date_time">Date and Time</label>
            <InputDate disabled id="date_time" @bind-Value="todo.DateAndTime" class="form-control"></InputDate>
            <ValidationMessage For="@(() => todo.DateAndTime)" />
        </div>
        <div class="mb-3">
            <label for="priority">Priority</label>
            <InputSelect disabled  id="priority" @bind-Value="todo.Priority" class="form-select">
                <option value="" selected>Select a priority</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
            </InputSelect>
            <ValidationMessage For="@(() => todo.Priority)" />
        </div>
        <div class="mb-3">
            <InputCheckbox disabled id="is_done" @bind-Value="todo.isDone" class="form-check-input"></InputCheckbox>
            <label for="is_done">Done</label>
        </div>
        <br />
        <button type="submit" class="btn btn-primary" style="width:150px">Delete</button>
        <button type="button" class="btn btn-danger" style="width:150px" onclick="@(() => TodoItemService.BackToList())">Back to List</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    TodoItem todo = new TodoItem { };

    protected override async Task OnInitializedAsync()
    {
        await TodoItemService.GetTodoItems();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else
        {
            todo = await TodoItemService.GetSingleTodoItem((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        await TodoItemService.DeleteTodoItem(todo.Id);
    }
}
